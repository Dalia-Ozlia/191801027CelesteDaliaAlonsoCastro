package Vista;

import DaoOzliaMae.DaoEmpleado;
import DaoOzliaMae.DaoMantenimiento;
import DaoOzliaMae.DaoHerramienta;
import Empleado.Empleado;
import Herramienta.Herramienta;
import Mantenimiento.Mantenimiento;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author celes
 */
public class MattoVer extends javax.swing.JFrame {

    /**
     * Creates new form MattoVer
     */
    public MattoVer() {
        initComponents();
        verTabla();
    }

    void verTabla(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID mantenimiento");
        modelo.addColumn("Fecha-Hora-Inicio");
        modelo.addColumn("Fecha-Hora-Fin");
        modelo.addColumn("Recibe-Cliente");
        modelo.addColumn("Status");
        modelo.addColumn("Nombre-empleado");
        modelo.addColumn("ID herramienta");
        modelo.addColumn("Ubicación");
        modelo.addColumn("Comentarios");
        
        TablaDatos.setModel(modelo);
        String datos[] = new String[9];
        
        List<Mantenimiento> listaMantenimientos = new ArrayList<>();
        try {
            listaMantenimientos = DaoMantenimiento.listaMantenimientos();
            for(Mantenimiento mantenimiento:listaMantenimientos){
                Empleado empleado = DaoEmpleado.nombre(mantenimiento.getEmpID());
                Herramienta herramienta = DaoHerramienta.ubicacion(mantenimiento.getHerrID());
                
                datos[0] = String.valueOf(mantenimiento.getMattoID());
                datos[1] = mantenimiento.getFechaHoraInicio();
                datos[2] = mantenimiento.getFechaHoraFin();
                datos[3] = mantenimiento.getRecibe();
                datos[4] = String.valueOf(mantenimiento.getStatus());
                datos[5] = empleado.getNombre();
                datos[6] = String.valueOf(mantenimiento.getHerrID());
                datos[7] = herramienta.getUbicacion();
                datos[8] = mantenimiento.getComentario();
                modelo.addRow(datos);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MattoVer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaDatos = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        TextHerrID = new javax.swing.JFormattedTextField();
        jButton5 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Tabla mantenimientos");

        TablaDatos.setFont(new java.awt.Font("Candara Light", 1, 18)); // NOI18N
        TablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(TablaDatos);

        jButton2.setFont(new java.awt.Font("Candara Light", 1, 24)); // NOI18N
        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Candara Light", 1, 24)); // NOI18N
        jButton1.setText("Restablecer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        TextHerrID.setForeground(new java.awt.Color(51, 51, 51));
        TextHerrID.setText("ID de herramienta");
        TextHerrID.setFont(new java.awt.Font("Candara Light", 1, 24)); // NOI18N

        jButton5.setFont(new java.awt.Font("Candara Light", 1, 24)); // NOI18N
        jButton5.setText("Buscar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jMenu1.setText("Filtrar");
        jMenu1.setFont(new java.awt.Font("Candara Light", 1, 27)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Candara Light", 1, 27)); // NOI18N
        jMenuItem1.setText("Mantenimientos abiertos");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setFont(new java.awt.Font("Candara Light", 1, 27)); // NOI18N
        jMenuItem2.setText("Mantenimientos cerrados");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(TextHerrID, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(33, 33, 33)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TextHerrID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        MenuOzLia ozLia = new MenuOzLia();
        ozLia.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        verTabla();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID mantenimiento");
        modelo.addColumn("Fecha-Hora-Inicio");
        modelo.addColumn("Fecha-Hora-Fin");
        modelo.addColumn("Recibe-Cliente");
        modelo.addColumn("Status");
        modelo.addColumn("Nombre-empleado");
        modelo.addColumn("ID herramienta");
        modelo.addColumn("Ubicación");

        TablaDatos.setModel(modelo);
        String datos[] = new String[8];

        List<Mantenimiento> listaMantenimientos = new ArrayList<>();
        try {
            listaMantenimientos = DaoMantenimiento.filtraar(0);
            for(Mantenimiento mantenimiento:listaMantenimientos){
                Empleado empleado = DaoEmpleado.nombre(mantenimiento.getEmpID());
                Herramienta herramienta = DaoHerramienta.ubicacion(mantenimiento.getHerrID());

                datos[0] = String.valueOf(mantenimiento.getMattoID());
                datos[1] = mantenimiento.getFechaHoraInicio();
                datos[2] = mantenimiento.getFechaHoraFin();
                datos[3] = mantenimiento.getRecibe();
                datos[4] = String.valueOf(mantenimiento.getStatus());
                datos[5] = empleado.getNombre();
                datos[6] = String.valueOf(mantenimiento.getHerrID());
                datos[7] = herramienta.getUbicacion();
                modelo.addRow(datos);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MattoVer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID mantenimiento");
        modelo.addColumn("Fecha-Hora-Inicio");
        modelo.addColumn("Fecha-Hora-Fin");
        modelo.addColumn("Recibe-Cliente");
        modelo.addColumn("Status");
        modelo.addColumn("Nombre-empleado");
        modelo.addColumn("ID herramienta");
        modelo.addColumn("Ubicación");

        TablaDatos.setModel(modelo);
        String datos[] = new String[8];

        List<Mantenimiento> listaMantenimientos = new ArrayList<>();
        try {
            listaMantenimientos = DaoMantenimiento.filtraar(1);
            for(Mantenimiento mantenimiento:listaMantenimientos){
                Empleado empleado = DaoEmpleado.nombre(mantenimiento.getEmpID());
                Herramienta herramienta = DaoHerramienta.ubicacion(mantenimiento.getHerrID());

                datos[0] = String.valueOf(mantenimiento.getMattoID());
                datos[1] = mantenimiento.getFechaHoraInicio();
                datos[2] = mantenimiento.getFechaHoraFin();
                datos[3] = mantenimiento.getRecibe();
                datos[4] = String.valueOf(mantenimiento.getStatus());
                datos[5] = empleado.getNombre();
                datos[6] = String.valueOf(mantenimiento.getHerrID());
                datos[7] = herramienta.getUbicacion();
                modelo.addRow(datos);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MattoVer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int herrID = Integer.valueOf(TextHerrID.getText());
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID mantenimiento");
        modelo.addColumn("Fecha-Hora-Inicio");
        modelo.addColumn("Fecha-Hora-Fin");
        modelo.addColumn("Recibe-Cliente");
        modelo.addColumn("Status");
        modelo.addColumn("Nombre-empleado");
        modelo.addColumn("ID herramienta");
        modelo.addColumn("Ubicación");

        TablaDatos.setModel(modelo);
        String datos[] = new String[8];

        List<Mantenimiento> listaMantenimientos = new ArrayList<>();
        try {
            listaMantenimientos = DaoMantenimiento.buscarHerr(herrID);
            for(Mantenimiento mantenimiento:listaMantenimientos){
                Empleado empleado = DaoEmpleado.nombre(mantenimiento.getEmpID());
                Herramienta herramienta = DaoHerramienta.ubicacion(mantenimiento.getHerrID());

                datos[0] = String.valueOf(mantenimiento.getMattoID());
                datos[1] = mantenimiento.getFechaHoraInicio();
                datos[2] = mantenimiento.getFechaHoraFin();
                datos[3] = mantenimiento.getRecibe();
                datos[4] = String.valueOf(mantenimiento.getStatus());
                datos[5] = empleado.getNombre();
                datos[6] = String.valueOf(mantenimiento.getHerrID());
                datos[7] = herramienta.getUbicacion();
                modelo.addRow(datos);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MattoVer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MattoVer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MattoVer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MattoVer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MattoVer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MattoVer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaDatos;
    private javax.swing.JFormattedTextField TextHerrID;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
